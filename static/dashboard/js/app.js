// Generated by CoffeeScript 1.6.1
(function() {
  define([ "jquery", "underscore", "backbone", "router", "models/ConfigModel", "models/AtAGlanceModel", "views/SidebarView", "views/ContentView", "text!templates/overview.html", "text!templates/sidebar.html" ], function(e, t, n, r, i, s, o, u, a, f) {
    return {
      events: {
        "click a": "pushstateClick",
        "click li": "pushstateClick"
      },
      pushstateClick: function(e) {
        return e.preventDefault();
      },
      initialize: function() {
        var n, l, c, h, p, d;
        r.initialize();
        e(function() {
          var t;
          t = io.connect("/server_status");
          t.on("connect", function() {
            return e.ajax({
              url: "/monitor_server",
              async: !1
            });
          });
          return t.on("status", function(t) {
            if (parseInt(t) === 0) {
              e("#server_status").css({
                color: "green"
              });
              e("#server_on").css({
                color: "grey"
              });
              e("#server_off").css({
                color: "orange"
              });
              return e("#run").css({
                color: "orange"
              });
            }
            e("#server_status").css({
              color: "red"
            });
            e("#server_off").css({
              color: "grey"
            });
            return e("#server_on").css({
              color: "orange"
            });
          });
        });
        n = new s;
        n.fetch({
          async: !1
        });
        l = new i;
        l.fetch({
          async: !1
        });
        h = t.template(a, {
          input: {
            balance: n.get("balance"),
            debug: l.get("Server Parameters").debug === "True" ? "checked" : "",
            using_sandbox: l.get("HIT Configuration").using_sandbox === "True" ? "checked" : ""
          }
        });
        e("#content").html(h);
        p = t.template(f);
        e("#sidebar").html(p);
        d = new o({
          config: l,
          ataglance: n
        });
        d.initialize();
        c = new u;
        c.initialize();
        e("#run").on("click", function() {
          return e.ajax({
            url: "/create_hit"
          });
        });
        e("#server_off").on("click", function() {
          var t, n, r;
          n = l.get("HIT Configuration").question_url + "/shutdown";
          r = /^https?\:\/\/([^\/:?#]+)(?:[\/:?#]|$)/i;
          t = n.match(r)[0] + l.get("Server Parameters").port + "/shutdown";
          return e.ajax({
            url: t,
            type: "GET",
            data: {
              hash: l.get("Server Parameters").hash
            }
          });
        });
        return e("#server_on").on("click", function() {
          return e.ajax({
            url: "/launch",
            type: "GET",
            success: e(function() {
              var t;
              t = io.connect("/server_status");
              t.on("connect", function() {
                return e.ajax({
                  url: "/monitor_server"
                });
              });
              return t.on("status", function(t) {
                if (parseInt(t) === 0) {
                  e("#server_status").css({
                    color: "green"
                  });
                  e("#server_on").css({
                    color: "grey"
                  });
                  e("#server_off").css({
                    color: "orange"
                  });
                  return e("#run").css({
                    color: "orange"
                  });
                }
                e("#server_status").css({
                  color: "red"
                });
                e("#server_off").css({
                  color: "grey"
                });
                return e("#server_on").css({
                  color: "orange"
                });
              });
            })
          });
        });
      }
    };
  });
}).call(this);